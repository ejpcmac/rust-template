version = "0.2"

# The available types of commits and their description.
#
# Types are shown in the dialog in the order they appear in this configuration.
[types]
feat = "add a new feature in the code (including tests for the feature)"
fix = "patch a bug in the code"
refactor = "restructure the code without changing its external behaviour"
test = "add, update (including refactoring) or remove tests only"
docs = "update the documentation only (including README and alike)"
style = "update the style, like running a code formatter or changing headers"
env = "update the development environment"
ide = "update the IDE configuration"
ci = "update the CI configuration (including local check scripts)"
revert = "revert a previous commit"
chore = "update or remove something that is not covered by any other type"
wip = "work in progress / to be rebased and squashed later"

# The accepted scopes.
#
# This table is optional: if omitted, no scope will be asked for.
[scopes]
# What kind of scope to accept.
#
# Can be one of: "any", "list". If it is "list", a `list` key containing a list
# of valid scopes is required.
accept = "list"
list = [
    # Templates
    "t:build.rs",
    "t:build.rs@embedded",
    "t:cargo",
    "t:cargo@bare-metal",
    "t:cargo@cli",
    "t:cargo@embedded",
    "t:cargo@minimal",
    "t:cargo@rtic",
    "t:changelog",
    "t:clippy",
    "t:committed",
    "t:contributing",
    "t:devshell",
    "t:devshell@embedded",
    "t:editorconfig",
    "t:embedded",
    "t:envrc",
    "t:flake",
    "t:flake@cli",
    "t:gh-ci",
    "t:git-z",
    "t:gitignore",
    "t:gitignore@embedded",
    "t:gitsetup",
    "t:jjsetup",
    "t:license",
    "t:memory.x",
    "t:prettierignore",
    "t:readme",
    "t:readme@cli",
    "t:rustfmt",
    "t:src@bare-metal",
    "t:src@cli",
    "t:src@embassy",
    "t:src@minimal",
    "t:src@rtic",
    "t:taplo",
    "t:test@cli",
    "t:toolchain",
    "t:toolchain@embedded",
    "t:vscode",
    "t:xtask",

    # Generator
    "scripts",

    # Tools
    "cargo-generate",
    "devshell",
    "direnv",
    "editorconfig",
    "flake",
    "git",
    "git-z",
    "taplo",
    "vscode",
]

# The ticket / issue reference configuration.
#
# This table is optional: if omitted, no ticket will be asked for.
[ticket]
# Set to true to require a ticket number.
# Set to false to ask for a ticket without requiring it.
required = false
# The list of valid ticket prefixes.
#
# Can be a `#` for GitHub / GitLab issues, or a Jira key for instance.
prefixes = ["#"]

# Templates written with the Tera [1] templating engine.
#
# Each template is documented below, with its list of available variables.
# Variables marked as optional can be `None`, hence should be checked for
# presence in the template.
#
# [1] https://tera.netlify.app/
[templates]
# The commit template.
#
# Available variables:
#
#   - type: the type of commit
#   - scope (optional): the scope of the commit
#   - description: the short description
#   - breaking_change (optional): the description of the breaking change
#   - ticket (optional): the ticket reference
commit = """
{{ type }}{% if scope %}({{ scope }}){% endif %}{% if breaking_change %}!{% endif %}: {{ description }}

# Feel free to enter a longer description here.

{% if ticket %}Refs: {{ ticket }}{% endif %}

{% if breaking_change %}BREAKING CHANGE: {{ breaking_change }}{% endif %}
"""
