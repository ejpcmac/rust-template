[package]
name = "{{project-name}}"
version = "0.1.0-dev.0"
authors = ["{{authors}}"]
# See https://crates.io/category_slugs
categories = [{% if project-type == "CLI" %}"command-line-utilities"{% endif %}]
edition = "2024"
homepage = "https://github.com/{{github-username}}/{{project-name}}"
keywords = []
license = "{{license-spdx}}"
repository = "https://github.com/{{github-username}}/{{project-name}}"
resolver = "2"
rust-version = "1.85"
description = "{{description}}"

[features]
# NOTE: This feature is enabled in `.vscode/settings.json` and can be used to
# enable some features when editing the code without impacting the default
# features.
rust-analyzer = []

[dependencies]
{% if project-type == "CLI" %}
clap = { version = "4", features = ["derive", "wrap_help"] }
color-eyre = "0.6"
colored = "3"
exitcode = "1"
eyre = "0.6"
indoc = "2"
inquire = "0.7"
thiserror = "2"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
{% elsif project-type == "Embedded (Bare-metal)" %}
cortex-m-rt = "0.7"
{% elsif project-type == "Embedded (RTIC)" %}
cortex-m-rtic = "1"
{% endif %}
{% if project-kind == "embedded" %}
defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }
{{hal-package}}

[dependencies.cortex-m]
version = "0.7"
features = ["critical-section-single-core", "inline-asm"]
{% endif %}
{% if project-type == "CLI" %}
[build-dependencies]
serde = { version = "1", features = ["derive"] }
serde_json = "1"

[target.'cfg(not(windows))'.dev-dependencies]
assert_cmd = "2"
rexpect = "0.6"
# assert_fs = "1"
# predicates = "3"
{% endif %}
{% if project-kind == "embedded" %}
# For `cargo fix` to work.
[[bin]]
name = "{{project-name}}"
test = false
bench = false

[profile.release]
panic = "abort"
opt-level = "z"
codegen-units = 1
lto = true
debug = true
{% endif %}
{% if project-kind != "embedded" %}
[workspace]
members = ["xtask"]
{% endif %}
[lints.rust]
# Forbidden
unsafe_code = "forbid"
unsafe_op_in_unsafe_fn = "forbid"

# Denied
let_underscore = { level = "deny", priority = -1 }
missing_docs = "deny"
unused_must_use = "deny"

# Warnings
macro_use_extern_crate = "warn"
missing_abi = "warn"
missing_debug_implementations = "warn"
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
single_use_lifetimes = "warn"

[lints.clippy]
# Deny some lints from the restrictions set.
multiple_unsafe_ops_per_block = "deny"
undocumented_unsafe_blocks = "deny"

# Enable all pedantic warnings…
pedantic = { level = "warn", priority = -1 }
# …except a few.
case_sensitive_file_extension_comparisons = "allow"
inline_always = "allow"
linkedlist = "allow"
missing_errors_doc = "allow"
must_use_candidate = "allow"

# Enable many restrictions.
alloc_instead_of_core = "warn"
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
as_conversions = "warn"
as_pointer_underscore = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
cfg_not_test = "warn"
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
default_numeric_fallback = "warn"
default_union_representation = "warn"
else_if_without_else = "warn"
empty_drop = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
exit = "warn"
expect_used = "warn"
field_scoped_visibility_modifiers = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
format_push_string = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
indexing_slicing = "warn"
infinite_loop = "warn"
iter_over_hash_type = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "warn"
min_ident_chars = "warn"
missing_assert_message = "warn"
missing_docs_in_private_items = "warn"
mod_module_files = "warn"
multiple_inherent_impl = "warn"
mutex_atomic = "warn"
non_zero_suggestions = "warn"
panic = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
semicolon_inside_block = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
todo = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
unwrap_in_result = "warn"
unwrap_used = "warn"
verbose_file_reads = "warn"

# Other groups
cargo = { level = "warn", priority = -1 }
redundant_pub_crate = "warn"
use_self = "warn"
